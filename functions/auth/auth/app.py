from json import JSONDecodeError

from aws_lambda_powertools import Logger
from aws_lambda_powertools.event_handler import (
    APIGatewayRestResolver,
    CORSConfig,
    content_types,
    Response,
)
from aws_lambda_powertools.utilities.typing import LambdaContext

from .service import get_auth_service

app = APIGatewayRestResolver(cors=CORSConfig())
logger = Logger()


@app.post("/auth/login")
def login():
    """
    Handles POST requests to authenticate a user and initiate a login session.
    
    Returns:
        Response object containing authentication result or error details.
    """
    auth_service = get_auth_service()
    return auth_service.handle_login(app.current_event.json_body)


@app.post("/auth/refresh")
def refresh():
    """
    Handles POST requests to refresh authentication tokens.
    
    Returns:
        The response from the authentication service's token refresh handler.
    """
    auth_service = get_auth_service()
    return auth_service.handle_refresh(app.current_event.json_body)


@app.exception_handler(JSONDecodeError)
def handle_json_decode_error(exc: JSONDecodeError):
    """
    Handle JSON decoding errors by returning a 400 Bad Request response with an error message in JSON format.
    
    Parameters:
        exc (JSONDecodeError): The exception raised during JSON parsing.
    
    Returns:
        Response: An HTTP response indicating invalid JSON input.
    """
    logger.error(f"JSON decoding error: {exc}")
    return Response(
        status_code=400,
        content_type=content_types.APPLICATION_JSON,
        body="Invalid JSON format in request body.",
    )


def lambda_handler(event, context: LambdaContext):
    """
    Entry point for the AWS Lambda function handling authentication HTTP requests.
    
    Appends the AWS request ID to the logger context and delegates request processing to the APIGatewayRestResolver, which routes the event to the appropriate authentication handler.
    
    Returns:
        dict: The HTTP response generated by the resolver, including status code, headers, and body.
    """
    logger.append_keys(request_id=context.aws_request_id)
    logger.info("Processing authentication request via APIGatewayRestResolver.")

    return app.resolve(event, context)
